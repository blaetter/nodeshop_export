<?php

/**********************************************************************
 * Export functions
 *********************************************************************/

/**
 * This function exports order to verlags-db
 *  This is a meu callback, Orders that should be exported are selected
 *  manually via admin interface, processed by this function and directly
 *  delivered to the end user as csv download matching the specs from
 *  verlags-db
 *
 * @param array $oids Holds IDs of the orders that should be exported into verlags-db
 *
 * @return bool Boolean FALSE something wrong happened, a file download if
 *              everything was fine
 */
function lightshop_orders_export($oids = [])
{
    if (empty($oids)) {
        return false;
    }
    $data = [];
    $i = 0;
    $url = '';
  // Don't export pending orders as they will be set to exported...
    $result = db_query('SELECT * from {lightshop_orders} WHERE status != "pending" AND oid in (%s)', htmlspecialchars(implode(', ', $oids)));
    while ($row = db_fetch_array($result)) {
        $i++;
      //we need to prepare data for export here
        $order = unserialize($row['order_data']);
        $entry = [
            'user'      => user_load($row['uid']),
            'customer'  => unserialize($row['customer_data']),
            'payment'   => unserialize($row['payment_data']),
        ];

      //We need to build up a single line for every single order - woooohooooo
        foreach ($order as $o) {
            //Means OrderArray - not elegant but usefull
            $node = node_load($o['node']);
            $oa = array_merge($row, $entry, array('order'=>$o, 'node' => $node));
            $export = [];
            $export['anrede']           = Helper::getSalutation(Helper::getValue($oa['customer'], 'title'));
            $export['titel']            = Helper::getTitle(Helper::getValue($oa['customer'], 'title'));
            $export['familienname']     = Helper::getValue($oa['customer'], 'name');
            $export['vorname']          = Helper::getValue($oa['customer'], 'firstname');

            $export['land']             = Helper::getCountryCode(Helper::getValue($oa['customer'], 'country'));
            $export['plz_strasse']      = Helper::getValue($oa['customer'], 'zip');
            $export['strasse']          = Helper::getValue($oa['customer'], 'street');
            $export['strasse']         .= ' '.Helper::getValue($oa['customer'], 'street_number');
            $export['ort']              = Helper::getValue($oa['customer'], 'city');
            $export['adressmerkmal1']   = Helper::getValue($oa['customer'], 'street_addon');
            $export['email']            = isset($oa['user']->mail)?$oa['user']->mail:'';
            $export['rechnungsart']     = 4;
            $export['adressmerkmal1']   = Helper::getValue($oa['customer'], 'street_addon');
            //Abweichende Lieferadresse, falls
            $export['lanrede']          = Helper::getSalutation(Helper::getValue($oa['customer'], 'deliver_title'));
            $export['ltitel']           = Helper::getTitle(Helper::getValue($oa['customer'], 'deliver_title'));
            $export['lfamilienname']    = Helper::getValue($oa['customer'], 'deliver_name');
            $export['lvorname']         = Helper::getValue($oa['customer'], 'deliver_firstname');

            $export['lland']            = Helper::getCountryCode(Helper::getValue($oa['customer'], 'deliver_country'));
            $export['lplz_strasse']     = Helper::getValue($oa['customer'], 'deliver_zip');
            $export['lstrasse']         = Helper::getValue($oa['customer'], 'deliver_street');
            $export['lstrasse']        .= ' '.Helper::getValue($oa['customer'], 'deliver_street_number');
            $export['lort']             = Helper::getValue($oa['customer'], 'deliver_city');
            $export['ladressmerkmal1']  = Helper::getValue($oa['customer'], 'deliver_street_addon');
            //Bestellungen buecher, onlineartikel etc...
            if ((!isset($node->field_warenid) || empty($node->field_warenid)) || (isset($node->field_warenid) && "1" != $node->field_warenid[0]['value']  && "2" != $node->field_warenid[0]['value']  && "5" != $node->field_warenid[0]['value'])) {
                if (isset($node->field_warenid[0]['value']) && !empty($node->field_warenid[0]['value'])) {
                    //feste Artikelnummer
                    $export['bartikelnummer'] = $node->field_warenid[0]['value'];
                } elseif ('story' == $node->type) {
                    //globale Artikelnummer für alle Onlineartikel
                      // Preis: 1€: Art1
                      // Preis: 2€: Art2
                      // Preis: 3€: Art3
                    $export['bartikelnummer'] = 'Art'.substr(Helper::getValue($node->field_price[0], 'value'), 0, 1);
                } elseif ('ausgabe' == $node->type) {
                // Preis 9,50 (neue Ausgaben): apart onl
                    if ('9.50' == Helper::getValue($node->field_price[0], 'value')) {
                        $export['bartikelnummer'] = 'apart onl';
                    }
                  // Preis 9,00 (alte Ausgaben): apartonl9
                    if ('9.00' == Helper::getValue($node->field_price[0], 'value')) {
                        $export['bartikelnummer'] = 'apartonl9';
                    }
                }
                $export['bmenge'] = Helper::getValue($oa['order'], 'quantity');
                $export['bbestelldatum'] = strftime("%Y%m%d", $oa['timestamp']);
                $export['bversandkosten_fix'] = '000000';
                $export['bversandkostenjn'] = 'n';
            } else {
              //Bestellungen abo
                $export['bzeitschriftnr'] = $node->field_warenid[0]['value'];
                $export['bpreisnummer'] = Helper::getValue($node->field_preisnr[0], 'value');
                $export['bbestelldatum'] = strftime("%Y%m%d", $oa['timestamp']);
            }
            if (isset($oa['order']['bonus']) && !empty($oa['order']['bonus'])) {
                $bonus = node_load($order['bonus']);
              //Abo-Praemie
                if (isset($bonus->field_warenid) && !empty($bonus->field_warenid[0]['value'])) {
                    $export['partikelnr'] = $bonus->field_warenid[0]['value'];
                }

                if (!empty($oa['customer']['deliver_name'])) {
                //praemienempfaenger an lieferadresse
                    $export['panrede']          = Helper::getSalutation(Helper::getValue($oa['customer'], 'deliver_title'));
                    $export['ptitel']           = Helper::getTitle(Helper::getValue($oa['customer'], 'deliver_title'));
                    $export['pfamilienname']    = Helper::getValue($oa['customer'], 'deliver_name');
                    $export['pvorname']         = Helper::getValue($oa['customer'], 'deliver_firstname');
                    ;
                    $export['pland']            = Helper::getCountryCode(Helper::getValue($oa['customer'], 'deliver_country'));
                    $export['pplz_strasse']     = Helper::getValue($oa['customer'], 'deliver_zip');
                    $export['pstrasse']         = Helper::getValue($oa['customer'], 'deliver_street');
                    $export['pstrasse']        .= ' '.Helper::getValue($oa['customer'], 'deliver_street_number');
                    $export['port']             = Helper::getValue($oa['customer'], 'deliver_city');
                    $export['padressmerkmal1']  = Helper::getValue($oa['customer'], 'deliver_street_addon');
                    $export['ppraemie'] = 2;
                } else {
                  //praemienempfaenger an rechnungsadresse
                    $export['panrede']          = Helper::getSalutation(Helper::getValue($oa['customer'], 'title'));
                    $export['ptitel']           = Helper::getTitle(Helper::getValue($oa['customer'], 'title'));
                    $export['pfamilienname']    = Helper::getValue($oa['customer'], 'name');
                    $export['pvorname']         = Helper::getValue($oa['customer'], 'firstname');
                    ;
                    $export['pland']            = Helper::getCountryCode(Helper::getValue($oa['customer'], 'country'));
                    $export['pplz_strasse']     = Helper::getValue($oa['customer'], 'zip');
                    $export['pstrasse']         = Helper::getValue($oa['customer'], 'street');
                    $export['pstrasse']        .= ' '.Helper::getValue($oa['customer'], 'street_number');
                    $export['port']             = Helper::getValue($oa['customer'], 'city');
                    $export['padressmerkmal1']  = Helper::getValue($oa['customer'], 'street_addon');
                    $export['ppraemie'] = 1;
                }
            }
            $data[] = $export;
            unset($oa);
            unset($export);
            unset($node);
        }
    }
    $export = new Export($data);
    $exportdata = $export->get();
    $exportstring = implode("\r\n", $exportdata);

    header("Content-Disposition: attachment; filename=shopbest.csv");
    ob_start();
    print_r($exportstring);
    ob_end_flush();

    $i = 0;
    $url = '';
    $result = db_query('UPDATE {lightshop_orders} set status = "exported" WHERE status != "pending" AND oid in (%s)', htmlspecialchars(implode(', ', $oids)));
    drupal_set_message('Die Datensätze wurden exportiert und als exportiert markiert. Über die Suche können die Datensätze wieder gefunden und bei Bedarf erneut exportiert werden.');

    exit;
}
